<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="113" failures="3" errors="0" time="2.651">
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:47" time="0.986" tests="8">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.002">
    </testcase>
    <testcase classname="useSubscriptionStatus should return correct status for active subscription" name="useSubscriptionStatus should return correct status for active subscription" time="0.009">
    </testcase>
    <testcase classname="useSubscriptionStatus should return correct status for expired subscription" name="useSubscriptionStatus should return correct status for expired subscription" time="0.001">
    </testcase>
    <testcase classname="useSubscriptionStatus should return correct status for pending subscription" name="useSubscriptionStatus should return correct status for pending subscription" time="0.001">
    </testcase>
    <testcase classname="useSubscriptionStatus should return correct status for canceled subscription" name="useSubscriptionStatus should return correct status for canceled subscription" time="0">
    </testcase>
    <testcase classname="useSubscriptionStatus should not fetch when user is not authenticated" name="useSubscriptionStatus should not fetch when user is not authenticated" time="0">
    </testcase>
    <testcase classname="useSubscriptionStatus should handle loading state" name="useSubscriptionStatus should handle loading state" time="0.001">
    </testcase>
    <testcase classname="useSubscriptionStatus should handle no subscription data" name="useSubscriptionStatus should handle no subscription data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:48" time="0.946" tests="6">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.001">
    </testcase>
    <testcase classname="Rate Limiting Security Authentication Endpoints should block after 5 failed signup attempts" name="Rate Limiting Security Authentication Endpoints should block after 5 failed signup attempts" time="0.01">
    </testcase>
    <testcase classname="Rate Limiting Security Authentication Endpoints should include proper rate limit headers" name="Rate Limiting Security Authentication Endpoints should include proper rate limit headers" time="0">
    </testcase>
    <testcase classname="Rate Limiting Security Authentication Endpoints should track rate limits per IP address" name="Rate Limiting Security Authentication Endpoints should track rate limits per IP address" time="0.001">
    </testcase>
    <testcase classname="Rate Limiting Security Rate Limiter Utility should properly calculate remaining requests" name="Rate Limiting Security Rate Limiter Utility should properly calculate remaining requests" time="0">
    </testcase>
    <testcase classname="Rate Limiting Security Rate Limiter Utility should reset after time window expires" name="Rate Limiting Security Rate Limiter Utility should reset after time window expires" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:47" time="1.001" tests="13">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.002">
    </testcase>
    <testcase classname="/api/stripe/webhook should reject non-POST requests" name="/api/stripe/webhook should reject non-POST requests" time="0.001">
    </testcase>
    <testcase classname="/api/stripe/webhook should reject requests without stripe signature" name="/api/stripe/webhook should reject requests without stripe signature" time="0.001">
    </testcase>
    <testcase classname="/api/stripe/webhook checkout.session.completed should update subscription when checkout completes" name="/api/stripe/webhook checkout.session.completed should update subscription when checkout completes" time="0.003">
    </testcase>
    <testcase classname="/api/stripe/webhook checkout.session.completed should reject when userId is missing from metadata" name="/api/stripe/webhook checkout.session.completed should reject when userId is missing from metadata" time="0.001">
    </testcase>
    <testcase classname="/api/stripe/webhook customer.subscription.updated should update subscription details" name="/api/stripe/webhook customer.subscription.updated should update subscription details" time="0">
    </testcase>
    <testcase classname="/api/stripe/webhook customer.subscription.updated should handle past_due status" name="/api/stripe/webhook customer.subscription.updated should handle past_due status" time="0.001">
    </testcase>
    <testcase classname="/api/stripe/webhook customer.subscription.deleted should mark subscription as expired" name="/api/stripe/webhook customer.subscription.deleted should mark subscription as expired" time="0">
    </testcase>
    <testcase classname="/api/stripe/webhook invoice.payment_succeeded should activate subscription on payment success" name="/api/stripe/webhook invoice.payment_succeeded should activate subscription on payment success" time="0">
    </testcase>
    <testcase classname="/api/stripe/webhook invoice.payment_failed should mark subscription as past due on payment failure" name="/api/stripe/webhook invoice.payment_failed should mark subscription as past due on payment failure" time="0">
    </testcase>
    <testcase classname="/api/stripe/webhook should handle unhandled event types" name="/api/stripe/webhook should handle unhandled event types" time="0">
    </testcase>
    <testcase classname="/api/stripe/webhook should handle webhook signature verification failure" name="/api/stripe/webhook should handle webhook signature verification failure" time="0">
    </testcase>
    <testcase classname="/api/stripe/webhook should handle processing errors gracefully" name="/api/stripe/webhook should handle processing errors gracefully" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:49" time="0.061" tests="1">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:49" time="0.07" tests="1">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:47" time="1.141" tests="8">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.002">
    </testcase>
    <testcase classname="SearchPage renders the search page with title" name="SearchPage renders the search page with title" time="0.034">
    </testcase>
    <testcase classname="SearchPage displays welcome message with user name" name="SearchPage displays welcome message with user name" time="0.005">
    </testcase>
    <testcase classname="SearchPage renders search form fields" name="SearchPage renders search form fields" time="0.096">
    </testcase>
    <testcase classname="SearchPage shows back to profile link" name="SearchPage shows back to profile link" time="0.021">
    </testcase>
    <testcase classname="SearchPage displays demo interface notice" name="SearchPage displays demo interface notice" time="0.043">
    </testcase>
    <testcase classname="SearchPage renders for unauthenticated users" name="SearchPage renders for unauthenticated users" time="0.013">
    </testcase>
    <testcase classname="SearchPage shows user email when name is not available" name="SearchPage shows user email when name is not available" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:48" time="1.136" tests="6">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.006">
    </testcase>
    <testcase classname="PremiumFeatureGuard should show loading spinner when loading" name="PremiumFeatureGuard should show loading spinner when loading" time="0.034">
    </testcase>
    <testcase classname="PremiumFeatureGuard should show children when user has active subscription" name="PremiumFeatureGuard should show children when user has active subscription" time="0.011">
    </testcase>
    <testcase classname="PremiumFeatureGuard should show default fallback when no active subscription" name="PremiumFeatureGuard should show default fallback when no active subscription" time="0.002">
    </testcase>
    <testcase classname="PremiumFeatureGuard should show custom fallback when provided" name="PremiumFeatureGuard should show custom fallback when provided" time="0.001">
    </testcase>
    <testcase classname="PremiumFeatureGuard should handle canceled subscription as inactive" name="PremiumFeatureGuard should handle canceled subscription as inactive" time="0.013">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:49" time="0.094" tests="1">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:47" time="1.197" tests="14">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.001">
    </testcase>
    <testcase classname="ProvidersListPage should render provider list" name="ProvidersListPage should render provider list" time="0.103">
    </testcase>
    <testcase classname="ProvidersListPage should display provider details correctly" name="ProvidersListPage should display provider details correctly" time="0.005">
    </testcase>
    <testcase classname="ProvidersListPage should show loading state" name="ProvidersListPage should show loading state" time="0.002">
    </testcase>
    <testcase classname="ProvidersListPage should handle filter toggles" name="ProvidersListPage should handle filter toggles" time="0.022">
    </testcase>
    <testcase classname="ProvidersListPage should toggle vetting status when button clicked" name="ProvidersListPage should toggle vetting status when button clicked" time="0.057">
    </testcase>
    <testcase classname="ProvidersListPage should toggle publishing status when button clicked" name="ProvidersListPage should toggle publishing status when button clicked" time="0.018">
    </testcase>
    <testcase classname="ProvidersListPage should disable publish button for unvetted providers" name="ProvidersListPage should disable publish button for unvetted providers" time="0.003">
    </testcase>
    <testcase classname="ProvidersListPage should handle delete with confirmation" name="ProvidersListPage should handle delete with confirmation" time="0.003">
    </testcase>
    <testcase classname="ProvidersListPage should not delete when confirmation cancelled" name="ProvidersListPage should not delete when confirmation cancelled" time="0.003">
    </testcase>
    <testcase classname="ProvidersListPage should show success message after operations" name="ProvidersListPage should show success message after operations" time="0.014">
    </testcase>
    <testcase classname="ProvidersListPage should show empty state when no providers" name="ProvidersListPage should show empty state when no providers" time="0.002">
    </testcase>
    <testcase classname="ProvidersListPage should have link to add new provider" name="ProvidersListPage should have link to add new provider" time="0.003">
    </testcase>
    <testcase classname="ProvidersListPage should have edit links for each provider" name="ProvidersListPage should have edit links for each provider" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:48" time="1.198" tests="20">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.002">
    </testcase>
    <testcase classname="providerRouter getAll should require admin role" name="providerRouter getAll should require admin role" time="0.024">
    </testcase>
    <testcase classname="providerRouter getAll should return all providers for admin" name="providerRouter getAll should return all providers for admin" time="0.005">
    </testcase>
    <testcase classname="providerRouter getAll should filter providers based on parameters" name="providerRouter getAll should filter providers based on parameters" time="0.001">
    </testcase>
    <testcase classname="providerRouter getPublished should return only published and vetted providers" name="providerRouter getPublished should return only published and vetted providers" time="0.001">
    </testcase>
    <testcase classname="providerRouter getById should return provider by id" name="providerRouter getById should return provider by id" time="0">
    </testcase>
    <testcase classname="providerRouter getById should throw error if provider not found" name="providerRouter getById should throw error if provider not found" time="0.001">
    </testcase>
    <testcase classname="providerRouter getById should prevent non-admin from viewing unpublished providers" name="providerRouter getById should prevent non-admin from viewing unpublished providers" time="0">
    </testcase>
    <testcase classname="providerRouter create should require admin role" name="providerRouter create should require admin role" time="0.001">
    </testcase>
    <testcase classname="providerRouter create should create a new provider" name="providerRouter create should create a new provider" time="0.003">
    </testcase>
    <testcase classname="providerRouter update should require admin role" name="providerRouter update should require admin role" time="0">
    </testcase>
    <testcase classname="providerRouter update should update provider" name="providerRouter update should update provider" time="0.001">
    </testcase>
    <testcase classname="providerRouter delete should require admin role" name="providerRouter delete should require admin role" time="0">
    </testcase>
    <testcase classname="providerRouter delete should delete provider" name="providerRouter delete should delete provider" time="0.001">
    </testcase>
    <testcase classname="providerRouter delete should throw error if provider not found" name="providerRouter delete should throw error if provider not found" time="0">
    </testcase>
    <testcase classname="providerRouter toggleVetting should toggle vetting status" name="providerRouter toggleVetting should toggle vetting status" time="0.001">
    </testcase>
    <testcase classname="providerRouter togglePublishing should toggle publishing status" name="providerRouter togglePublishing should toggle publishing status" time="0">
    </testcase>
    <testcase classname="providerRouter togglePublishing should prevent publishing unvetted providers" name="providerRouter togglePublishing should prevent publishing unvetted providers" time="0.001">
    </testcase>
    <testcase classname="providerRouter createProgram should require admin role" name="providerRouter createProgram should require admin role" time="0">
    </testcase>
    <testcase classname="providerRouter createProgram should create a new program" name="providerRouter createProgram should create a new program" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:48" time="1.232" tests="10">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.007">
    </testcase>
    <testcase classname="NewProviderPage should render the form with all required fields" name="NewProviderPage should render the form with all required fields" time="0.13">
    </testcase>
    <testcase classname="NewProviderPage should handle vetting and publishing checkboxes" name="NewProviderPage should handle vetting and publishing checkboxes" time="0.03">
    </testcase>
    <testcase classname="NewProviderPage should handle special needs fields" name="NewProviderPage should handle special needs fields" time="0.03">
    </testcase>
    <testcase classname="NewProviderPage should handle age groups input" name="NewProviderPage should handle age groups input" time="0.013">
    </testcase>
    <testcase classname="NewProviderPage should validate required fields" name="NewProviderPage should validate required fields" time="0.01">
    </testcase>
    <testcase classname="NewProviderPage should show loading state during submission" name="NewProviderPage should show loading state during submission" time="0.034">
    </testcase>
    <testcase classname="NewProviderPage should display error message on failure" name="NewProviderPage should display error message on failure" time="0.004">
    </testcase>
    <testcase classname="NewProviderPage should handle cancel button" name="NewProviderPage should handle cancel button" time="0.007">
    </testcase>
    <testcase classname="NewProviderPage should handle all Australian states" name="NewProviderPage should handle all Australian states" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:49" time="0.189" tests="13">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.001">
    </testcase>
    <testcase classname="Provider CRUD Operations create should allow admin to create a provider" name="Provider CRUD Operations create should allow admin to create a provider" time="0.01">
    </testcase>
    <testcase classname="Provider CRUD Operations create should reject non-admin users from creating providers" name="Provider CRUD Operations create should reject non-admin users from creating providers" time="0.01">
    </testcase>
    <testcase classname="Provider CRUD Operations create should validate required fields" name="Provider CRUD Operations create should validate required fields" time="0.002">
    </testcase>
    <testcase classname="Provider CRUD Operations update should allow admin to update a provider" name="Provider CRUD Operations update should allow admin to update a provider" time="0.002">
    </testcase>
    <testcase classname="Provider CRUD Operations update should reject non-admin users from updating providers" name="Provider CRUD Operations update should reject non-admin users from updating providers" time="0">
    </testcase>
    <testcase classname="Provider CRUD Operations toggleVetting should toggle vetting status" name="Provider CRUD Operations toggleVetting should toggle vetting status" time="0.001">
    </testcase>
    <testcase classname="Provider CRUD Operations togglePublishing should toggle publishing status" name="Provider CRUD Operations togglePublishing should toggle publishing status" time="0.001">
    </testcase>
    <testcase classname="Provider CRUD Operations getAll should return all providers for admin with filters" name="Provider CRUD Operations getAll should return all providers for admin with filters" time="0.001">
    </testcase>
    <testcase classname="Provider CRUD Operations getAll should reject non-admin users from accessing getAll" name="Provider CRUD Operations getAll should reject non-admin users from accessing getAll" time="0.001">
    </testcase>
    <testcase classname="Provider CRUD Operations getPublished should return only published and vetted providers for users" name="Provider CRUD Operations getPublished should return only published and vetted providers for users" time="0">
    </testcase>
    <testcase classname="Provider CRUD Operations delete should allow admin to delete a provider" name="Provider CRUD Operations delete should allow admin to delete a provider" time="0.001">
    </testcase>
    <testcase classname="Provider CRUD Operations delete should reject non-admin users from deleting providers" name="Provider CRUD Operations delete should reject non-admin users from deleting providers" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="3" skipped="0" timestamp="2025-08-13T23:48:47" time="1.46" tests="6">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.002">
    </testcase>
    <testcase classname="Authentication with Test User Cleanup Admin User Tests should create and authenticate admin user" name="Authentication with Test User Cleanup Admin User Tests should create and authenticate admin user" time="0.178">
    </testcase>
    <testcase classname="Authentication with Test User Cleanup Admin User Tests should recreate admin user even if it already exists" name="Authentication with Test User Cleanup Admin User Tests should recreate admin user even if it already exists" time="0.256">
      <failure>Error: expect(received).toHaveLength(expected)

Expected length: 1
Received length: 0
Received array:  []
    at Object.&lt;anonymous&gt; (/Users/sergei.davidov@clearroute.io/Documents/holiday-program-aggregator/apps/web/src/__tests__/integration/auth-with-cleanup.test.ts:81:21)</failure>
    </testcase>
    <testcase classname="Authentication with Test User Cleanup Multiple User Types should create all test users and clean them up" name="Authentication with Test User Cleanup Multiple User Types should create all test users and clean them up" time="0.341">
      <failure>Error: expect(received).toHaveLength(expected)

Expected length: 3
Received length: 0
Received array:  []
    at Object.&lt;anonymous&gt; (/Users/sergei.davidov@clearroute.io/Documents/holiday-program-aggregator/apps/web/src/__tests__/integration/auth-with-cleanup.test.ts:104:23)</failure>
    </testcase>
    <testcase classname="Authentication with Test User Cleanup Test Isolation test 1: should start with no test users" name="Authentication with Test User Cleanup Test Isolation test 1: should start with no test users" time="0.068">
    </testcase>
    <testcase classname="Authentication with Test User Cleanup Test Isolation test 2: should also start with no test users (isolated from test 1)" name="Authentication with Test User Cleanup Test Isolation test 2: should also start with no test users (isolated from test 1)" time="0.098">
      <failure>Error: expect(received).toBeNull()

Received: {&quot;createdAt&quot;: 2025-08-13T23:48:49.446Z, &quot;email&quot;: &quot;test-admin@test.com&quot;, &quot;emailVerified&quot;: 2025-08-13T23:48:49.446Z, &quot;id&quot;: &quot;user-1755128929446&quot;, &quot;role&quot;: &quot;ADMIN&quot;, &quot;updatedAt&quot;: 2025-08-13T23:48:49.446Z}
    at Object.&lt;anonymous&gt; (/Users/sergei.davidov@clearroute.io/Documents/holiday-program-aggregator/apps/web/src/__tests__/integration/auth-with-cleanup.test.ts:167:25)</failure>
    </testcase>
  </testsuite>
  <testsuite name="Test Helper Module" errors="0" failures="0" skipped="0" timestamp="2025-08-13T23:48:48" time="1.552" tests="6">
    <testcase classname="Test Helper Module should export test utilities" name="Test Helper Module should export test utilities" time="0.001">
    </testcase>
    <testcase classname="/api/cron/subscription-lifecycle should reject non-GET requests" name="/api/cron/subscription-lifecycle should reject non-GET requests" time="0.001">
    </testcase>
    <testcase classname="/api/cron/subscription-lifecycle should require authorization header" name="/api/cron/subscription-lifecycle should require authorization header" time="0.001">
    </testcase>
    <testcase classname="/api/cron/subscription-lifecycle should reject invalid authorization" name="/api/cron/subscription-lifecycle should reject invalid authorization" time="0">
    </testcase>
    <testcase classname="/api/cron/subscription-lifecycle should process lifecycle when authorized" name="/api/cron/subscription-lifecycle should process lifecycle when authorized" time="0.002">
    </testcase>
    <testcase classname="/api/cron/subscription-lifecycle should handle errors gracefully" name="/api/cron/subscription-lifecycle should handle errors gracefully" time="0.001">
    </testcase>
  </testsuite>
</testsuites>